
// src/pages/dashboard/analyst/analytics/VulnerabilityDashboard.jsx
import React, { useEffect, useState } from "react";
import axios from "axios";
import { Box, Card, CardContent, Typography, Grid, LinearProgress } from "@mui/material";

const VulnerabilityDashboard = () => {
  const [vulns, setVulns] = useState([]);

  useEffect(() => {
    axios.get("http://localhost:5000/api/analytics/vulnerabilities")
      .then(res => {
        const data = res.data;
        // If the API returns an object with the array nested:
        const arr = Array.isArray(data) 
          ? data 
          : Array.isArray(data.vulnerabilities) 
            ? data.vulnerabilities 
            : [];
        setVulns(arr);
      })
      .catch(err => {
        console.error("Error fetching vulnerabilities:", err);
        setVulns([]);
      });
  }, []);

  return (
    <Box p={3}>
      <Typography variant="h5" gutterBottom>Vulnerability Dashboard</Typography>
      <Grid container spacing={3}>
        {Array.isArray(vulns) && vulns.map((vuln, index) => (
          <Grid item xs={12} md={4} key={index}>
            <Card>
              <CardContent>
                <Typography variant="h6">{vuln.title}</Typography>
                <Typography variant="body2" color="textSecondary">
                  Severity: {vuln.severity}
                </Typography>
                <Box mt={2}>
                  <LinearProgress variant="determinate" value={vuln.progress || 0} />
                  <Typography variant="caption">
                    Remediation Progress: {vuln.progress ?? 0}%
                  </Typography>
                </Box>
              </CardContent>
            </Card>
          </Grid>
        ))}
        {(!Array.isArray(vulns) || vulns.length === 0) && (
          <Grid item xs={12}>
            <Typography>No vulnerabilities found.</Typography>
          </Grid>
        )}
      </Grid>
    </Box>
  );
};

export default VulnerabilityDashboard;


